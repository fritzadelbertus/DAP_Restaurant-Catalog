{"version":3,"file":"249.bundle.js","mappings":";oYACA,gnGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBAmDA,QAjDqB,CACbC,IAAG,SAACC,GAAK,oHACY,OAAzBC,EAAAA,EAAAA,aAAyB,kBAEAC,MAAMF,GAAI,OAAnB,OAARG,EAAW,EAAH,cACaA,EAASC,OAAM,OACjB,OADnBC,EAAe,EAAH,KAClBJ,EAAAA,EAAAA,aAAyB,kBACmB,OAArC,EAAKK,kBAAkBH,GAAqB,KAAOE,GAAY,kCAEtEE,QAAQC,IAAI,EAAD,IACXC,EAAAA,QAAAA,qBAAmC,QAEZ,OAAzBR,EAAAA,EAAAA,aAAyB,kBAClB,MAAI,yDAZE,EAaf,EAEMS,KAAI,SAACV,EAAKW,GAAM,sHAUnB,OATDV,EAAAA,EAAAA,aACMW,EAAY,CAChBC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUP,GACrBQ,MAAO,YACR,kBAEwBjB,MAAMF,EAAKY,GAAU,OAA9B,OAART,EAAW,EAAH,cACaA,EAASC,OAAM,OACjB,OADnBC,EAAe,EAAH,KAClBJ,EAAAA,EAAAA,aAAyB,kBACmB,OAArC,EAAKK,kBAAkBH,GAAqB,KAAOE,GAAY,kCAEtEE,QAAQC,IAAI,EAAD,IACXC,EAAAA,QAAAA,qBAAmC,QAEZ,OAAzBR,EAAAA,EAAAA,aAAyB,kBAClB,MAAI,yDArBS,EAsBtB,EAEAK,kBAAiB,SAACH,GAChB,OAAIA,EAASiB,GAAWjB,GACA,MAApBA,EAASkB,QACXZ,EAAAA,QAAAA,iBAEK,KACT,yTChDF,gnGAAAX,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,0lBAAAA,EAAA,EAAAA,EAAA,SAAAA,IAAA,SAAAA,GAAA,sYAcA,QAZ2B,yBAF3B,4FAE2B,SAF3B,QAMG,EAJwB,EASxB,OAXH,EAE2B,OAF3B,EAE2B,+CACzB,oGACyBwB,EAAAA,EAAAA,IAAiBC,EAAAA,EAAAA,MAAkB,OAA5C,OAARpB,EAAW,EAAH,uBACM,OAAbA,EAAoBA,EAAWA,EAASqB,aAAW,2CAC3D,0FAED,WAA8BC,GAAE,uFACPH,EAAAA,EAAAA,IAAiBC,EAAAA,EAAAA,OAAoBE,IAAI,OAAlD,OAARtB,EAAW,EAAH,uBACM,OAAbA,EAAoBA,EAAWA,EAASuB,YAAU,2CAC1D,+CAXH,6DAWG,EATwB,gDCK3B,QANqB,CACnBC,KAAM,GAAF,OAAKC,EAAAA,QAAAA,SAAe,QACxBC,OAAQ,SAACJ,GAAE,gBAAQG,EAAAA,QAAAA,SAAe,kBAAUH,EAAE,EAC9CK,OAAQ,GAAF,OAAKF,EAAAA,QAAAA,SAAe,wDCI5B,QATe,CACbG,SAAU,uCACVC,eAAgB,8CAChBC,WAAY,gBACZC,cAAe,sBACfC,iBAAkB,EAClBC,kBAAmB","sources":["webpack://lagi-laper/./src/scripts/data/fetch-control.js","webpack://lagi-laper/./src/scripts/data/restaurants-datasource.js","webpack://lagi-laper/./src/scripts/globals/api-endpoint.js","webpack://lagi-laper/./src/scripts/globals/config.js"],"sourcesContent":["import FallbackTools from '../utils/fallback-tools';\nimport LoaderTools from '../utils/loader-tools';\n\nconst FetchControl = {\n  async get(url) {\n    LoaderTools.showLoader();\n    try {\n      const response = await fetch(url);\n      const responseJson = await response.json();\n      LoaderTools.hideLoader();\n      return this._validateResponse(response) === null ? null : responseJson;\n    } catch (error) {\n      console.log(error);\n      FallbackTools.renderNoConnection();\n    }\n    LoaderTools.hideLoader();\n    return null;\n  },\n\n  async post(url, data) {\n    LoaderTools.showLoader();\n    const fetchData = {\n      method: 'POST',\n      headers: {\n        Accept: 'application.json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n      cache: 'no-cache',\n    };\n    try {\n      const response = await fetch(url, fetchData);\n      const responseJson = await response.json();\n      LoaderTools.hideLoader();\n      return this._validateResponse(response) === null ? null : responseJson;\n    } catch (error) {\n      console.log(error);\n      FallbackTools.renderNoConnection();\n    }\n    LoaderTools.hideLoader();\n    return null;\n  },\n\n  _validateResponse(response) {\n    if (response.ok) return response;\n    if (response.status === 404) {\n      FallbackTools.renderNotFound();\n    }\n    return null;\n  },\n};\n\nexport default FetchControl;\n","import API_ENDPOINT from '../globals/api-endpoint';\nimport FetchControl from './fetch-control';\n\nclass RestaurantsDataSource {\n  static async listOfRestaurants() {\n    const response = await FetchControl.get(API_ENDPOINT.LIST);\n    return response === null ? response : response.restaurants;\n  }\n\n  static async restaurantDetail(id) {\n    const response = await FetchControl.get(API_ENDPOINT.DETAIL(id));\n    return response === null ? response : response.restaurant;\n  }\n}\n\nexport default RestaurantsDataSource;\n","import CONFIG from './config';\n\nconst API_ENDPOINT = {\n  LIST: `${CONFIG.BASE_URL}list`,\n  DETAIL: (id) => `${CONFIG.BASE_URL}detail/${id}`,\n  REVIEW: `${CONFIG.BASE_URL}review`,\n};\n\nexport default API_ENDPOINT;\n","const CONFIG = {\n  BASE_URL: 'https://restaurant-api.dicoding.dev/',\n  BASE_IMAGE_URL: 'https://restaurant-api.dicoding.dev/images/',\n  CACHE_NAME: 'Lagi-Laper-V1',\n  DATABASE_NAME: 'lagi-laper-database',\n  DATABASE_VERSION: 1,\n  OBJECT_STORE_NAME: 'restaurants',\n};\n\nexport default CONFIG;\n"],"names":["i","get","url","LoaderTools","fetch","response","json","responseJson","_validateResponse","console","log","FallbackTools","post","data","fetchData","method","headers","Accept","body","JSON","stringify","cache","ok","status","FetchControl","API_ENDPOINT","restaurants","id","restaurant","LIST","CONFIG","DETAIL","REVIEW","BASE_URL","BASE_IMAGE_URL","CACHE_NAME","DATABASE_NAME","DATABASE_VERSION","OBJECT_STORE_NAME"],"sourceRoot":""}